

//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------


namespace MITRA
{

using System;
using System.Data.Entity;
using System.Data.Entity.Infrastructure;

using System.Data.Entity.Core.Objects;
using System.Linq;


public partial class db_mitraEntities1 : DbContext
{
    public db_mitraEntities1()
        : base("name=db_mitraEntities1")
    {

    }

        private static db_mitraEntities1 _context;
        public static db_mitraEntities1 GetContext()
        {
            if (_context == null)
            {
                return _context = new db_mitraEntities1();
            }
            return _context;
        }

        protected override void OnModelCreating(DbModelBuilder modelBuilder)
    {
        throw new UnintentionalCodeFirstException();
    }


    public virtual DbSet<Должность> Должность { get; set; }

    public virtual DbSet<Материал> Материал { get; set; }

    public virtual DbSet<Наряд> Наряд { get; set; }

    public virtual DbSet<Наряд_Сотрудник> Наряд_Сотрудник { get; set; }

    public virtual DbSet<Оборудование> Оборудование { get; set; }

    public virtual DbSet<Отчёт> Отчёт { get; set; }

    public virtual DbSet<Состояние> Состояние { get; set; }

    public virtual DbSet<Сотрудник> Сотрудник { get; set; }

    public virtual DbSet<Тип_оборудования> Тип_оборудования { get; set; }

    public virtual DbSet<Шаблон> Шаблон { get; set; }

    public virtual DbSet<Расход> Расход { get; set; }

    public virtual DbSet<Учётная_запись> Учётная_запись { get; set; }


    public virtual ObjectResult<GetEmployees_Result> GetEmployees(Nullable<int> orderId)
    {

        var orderIdParameter = orderId.HasValue ?
            new ObjectParameter("OrderId", orderId) :
            new ObjectParameter("OrderId", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEmployees_Result>("GetEmployees", orderIdParameter);
    }

}

}

